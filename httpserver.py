import http.server
import socketserver
import subprocess
import os
import sys
from urllib.parse import urlparse
from urllib.parse import parse_qs

class MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        # Sending an '200 OK' response
        self.send_response(200)

        # Setting the header
        self.send_header("Content-type", "text/html")

        # Whenever using 'send_header', you also have to call 'end_headers'
        self.end_headers()

        # Extract query param
        name = 'World'
        query_components = parse_qs(urlparse(self.path).query)
        if 'name' in query_components:
            name = query_components["name"][0]
        #os.system("read_logs.sh {name}")
        # subprocess.call(shlex.split('./read_logs.sh {name}'))
        #os.system("read_logs.sh {name}")
        # Some custom HTML code, possibly generated by another function
        html = f"""<html><head></head><body><h1>Hello {name}!</h1>
        <iframe source="{name}-as.html" width=800 height=2000 frameborder=0></iframe>
        </body></html>"""
        
        output = (subprocess.check_output(['cmd', '/c', 'oc logs --tail=-1 -n awl-{name} -l product=partner,type=as'])).decode();
        output = "<br />".join(output.split("\n"))
        
        # Writing the HTML contents with UTF-8
        self.wfile.write(bytes("<html><body>" + output  + "</body></html>", "utf8"))

        return

# Create an object of the above class
handler_object = MyHttpRequestHandler

PORT = 8000
my_server = socketserver.TCPServer(("", PORT), handler_object)

# Star the server
my_server.serve_forever()
